[versions]
agp = "8.1.2"
kotlin = "1.9.10"
compose = "1.5.3"
compose-compiler = "1.5.3"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"
koin = "3.5.0"
ktorClient = "2.3.5"
kotlinxCoroutines = "1.7.3"
kotlinXSerialization = "1.6.0"
kotlinXSerializationPlugin = "1.9.10"
imageLoader = "1.6.8"
kmmViewModelCore = "1.0.0-ALPHA-14"
precompose = "1.5.4"
devIceRock = "0.16.1"
devIceRockResources = "0.23.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

kmmViewmodelCore = { module = "com.rickclephas.kmm:kmm-viewmodel-core", version.ref = "kmmViewModelCore" }
imageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageLoader" }
koin = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koinCore = { module = "io.insert-koin:koin-core", version.ref = "koin" }
ktorClient = { module = "io.ktor:ktor-client-android", version.ref = "ktorClient" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClient" }
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktorClient" }
ktorClientIos = { module = "io.ktor:ktor-client-ios", version.ref = "ktorClient" }
ktorClientDarwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorClient" }
ktorClientJson = { module = "io.ktor:ktor-client-json", version.ref = "ktorClient" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClient" }
ktorSerializationKotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClient" }
kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinxCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinxSerializationCore = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinXSerialization" }
precompose = { module = "moe.tlaster:precompose", version.ref = "precompose" }
devIceRockMvvmCompose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "devIceRock" }
devIceRockMvvmCore = { module = "dev.icerock.moko:mvvm-core", version.ref = "devIceRock" }
devIceRockMvvmFlow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "devIceRock" }
devIceRockMvvmFlowCompose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "devIceRock" }
devIceRockResources = { module = "dev.icerock.moko:resources", version.ref = "devIceRockResources" }
devIceRockResourcesCompose = { module = "dev.icerock.moko:resources-compose", version.ref = "devIceRockResources" }
devIceRockResourcesGeneratorPlugin = { module = "dev.icerock.moko:resources-generator", version.ref = "devIceRockResources" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
composePlugin = { id = "org.jetbrains.compose", version.ref = "compose" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinXSerializationPlugin" }